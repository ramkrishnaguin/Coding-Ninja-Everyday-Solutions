from os import *
from sys import *
from collections import *
from math import *

'''
    Time Complexity: O(N)
    Space Complexity: O(1)

    where 'N' is the index of the last checkpoint.
'''

def minTime(time, checkpoints):
    n = len(time)

    # Defining the array to store answers for last checkpoint.
    prev = time[0]

    # Iterating through all the checkpoints.
    for i in range(1, n):

        # Finding the minimum time to reach current checkpoints.
        curr = [0, 0]
        curr[0] = min(prev[0] + time[i][0], prev[1] + checkpoints[i - 1][1])
        curr[1] = min(prev[1] + time[i][1], prev[0] + checkpoints[i - 1][0])

        # Updating the time to reach current checkpoint as the time to reach last checkpoint.
        prev[0], prev[1] = curr[0], curr[1]

    return min(prev[0], prev[1])
