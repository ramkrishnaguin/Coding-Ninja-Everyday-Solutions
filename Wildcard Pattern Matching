#include<bits/stdc++.h>

bool solve(string &s, string &t, int n, int m, vector<vector<int>>&dp){

if(n<0) return n == m;

if(m<0){

for(int i=0;i<=n;i++){

if(s[i]!='*') return false;

}

return true;

}

if(dp[n][m]!=-1) return dp[n][m];

if(s[n] == t[m] || s[n] == '?') return dp[n][m] = solve(s,t,n-1,m-1,dp);

else if(s[n] == '*'){

return dp[n][m] = (solve(s,t,n-1,m,dp) || solve(s,t,n,m-1,dp));

}

return dp[n][m] = false;

}

bool wildcardMatching(string pattern, string text)

{

int n = pattern.size(), m = text.size();

vector<vector<int>>dp(n,vector<int>(m,-1));

return solve(pattern,text,n-1,m-1,dp);

}
