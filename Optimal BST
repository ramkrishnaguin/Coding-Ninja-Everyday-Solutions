#include <bits/stdc++.h>

 

int optimalCost(vector<int>& keys, vector<int>& freq, int n)

{

// Write your code here

vector<vector<int>> dp(n+2,vector<int> (n+2,0));

vector<int> pre(n+2);

for(int i=1;i<=n;i++){

pre[i]=pre[i-1] + freq[i-1];

}

// pre[0]=pre[1];

pre[n+1] = pre[n];

 

for(int i=0;i<n;i++){

for(int start = 1,end=1+i;start<=n-i;start++,end++){

int ans=INT_MAX;

if(i==0){

dp[start][end] = freq[start-1];

} else{

for(int j=start;j<=end;j++){

// cout<<freq[j-1]<<" "<<dp[start][j-1]<<" "<<dp[j+1][end]<<endl;

ans = min(ans,freq[j-1] + dp[start][j-1] - pre[start-1] + pre[j-1] + dp[j+1][end] + pre[end] - pre[j]);

}

dp[start][end] = ans;

 

}

// cout<<dp[start][end]<<endl;

}

}

return dp[1][n];

}
