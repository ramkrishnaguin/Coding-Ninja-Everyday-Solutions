#include <bits/stdc++.h>

vector<vector<int>> color_border(int n, int m, int new_color, int row, int col,vector<vector<int>> matrix){

queue<pair<int,int>>q;

vector<vector<int>>visited(n,vector<int>(m,0));

q.push({row,col});

int val = matrix[row][col], dx[4] = {-1,0,1,0}, dy[4] = {0,1,0,-1};

visited[row][col] = 1;

while(!q.empty()){

auto curr = q.front();

q.pop();

int f = 0;

for(int i=0;i<4;i++){

int newx = curr.first+dx[i];

int newy = curr.second+dy[i];

if(newx>=0 && newx<n && newy>=0 && newy<m && !visited[newx][newy] && matrix[newx][newy] == val){

visited[newx][newy] = 1;

q.push({newx,newy});

if(i == 0)f = 1;

}

}

if(!f)matrix[curr.first][curr.second] = new_color;

}

return matrix;

}
