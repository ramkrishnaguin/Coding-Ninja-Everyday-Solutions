#include <bits/stdc++.h>

/****************************************************************

Following is the class structure of the Node class:

class Node

{

public:

int data;

Node *next;

Node *prev;

Node(int data)

{

this->data = data;

this->next = NULL;

this->prev = NULL;

}

};

*****************************************************************/

/*

Time Complexity: O( N ).

Space Complexity: O( 1 ).

Where 'N' is the number of nodes in the list.

*/

/****************************************************************

Following is the class structure of the Node class:

class Node

{

public:

int data;

Node *next;

Node *prev;

Node(int data)

{

this->data = data;

this->next = NULL;

this->prev = NULL;

}

};

*****************************************************************/

void deleteNode(Node * ( & head), int pos) {

// If we have to delete the first node of the list.

if (pos == 0) {

head = head -> next;

head -> prev = NULL;

return;

}

int len = 0;

Node * temp = head;

// Calculating the length of the doubly linked list.

while (temp != NULL) {

len += 1;

temp = temp -> next;

}

temp = head;

// If we have to delete the last node of the list.

if (pos == len - 1) {

// Reach to the second last node of the list.

for (int i = 0; i < pos - 1; i++) {

temp = temp -> next;

}

temp -> next = NULL;

return;

}

// Reach to the position 'POS' of the list.

for (int i = 0; i < pos; i++) {

temp = temp -> next;

}

temp -> prev -> next = temp -> next;

temp -> next -> prev = temp -> prev;

}
