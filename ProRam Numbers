/*#include <bits/stdc++.h> 
int possibleNumbers(int n, int m, vector<int>& digits) {
	// Write your code here.
}*/
#include<bits/stdc++.h>

int helper(vector<int>number,vector<int>digits,int index){

   if(index==number.size()){

       return 1;

   }

   int ans=0;

   for(int i=0;i<digits.size();i++){

       if(number[index]>digits[i]){

           ans+=pow(digits.size(),number.size()-1-index);

       }

       else if(number[index]==digits[i]){

         ans+= helper(number,digits,index+1);

          break;

       }

       else{

           break;

       }

   }

  return ans;

 

}

 

int possibleNumbers(int N, int M, vector<int>& digits) {

    int range_digit=log10(N)+1;

    int ans=0;

    for(int i=1;i<range_digit;i++){

      ans=ans+pow(M,i);

    }

    vector<int>number;

    while(N>0){

        number.push_back(N%10);

        N=N/10;

    }

    reverse(number.begin(),number.end());

    int ans1=helper(number,digits,0);

   

 

     return (ans + ans1);

}
